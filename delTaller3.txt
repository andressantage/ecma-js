/* 1. Construir un objeto literal "campus" que gestione
la info(PROPIEDADES) de Campus, trainers, campers, niveles,
tecnologías, teams y roadMap
1.1. De campus administrar los datos de contacto de las sedes en
Bucaramanga, Bogotá, Medellín y México
1.2. De los trainers y campers, su nombre, sus teléfonos, teams
(horarios de las teams=> día, hora y salones (nro y piso), y el
email, y de los campers también horarios de inglés y ser.
1.3. De los campers, también gestionar su nivel actual, como su
barrio y medio de transporte
1.4. De los niveles, su pre requisito, a que tecnología pertenece, si
es electiva u obligatoria
1.5. De la roadmap , Nro de créditos, año, Nro de asignaturas */
let campus={
    campus:[
        {
            bucaramanga: {contacto:''},
            bogota: {contacto:''},
            medellin: {contacto:''},
            mexico: {contacto:''}
        }
    ],
    trainers:[
        {
            nombre: '',
            telefono: '',
            teams: [{dia:'',hora:'',salon:{numero:'',piso:''}},
                    {dia:'',hora:'',salon:{numero:'',piso:''}}],
            email:''
        }
        //otros trainers
    ],
    campers:[
        {
            nombre: '',
            telefono: '',
            teams: [{dia:'',hora:'',salon:{numero:'',piso:''}},
                    {dia:'',hora:'',salon:{numero:'',piso:''}}],
            email:'',
            ingles:{dia:'',hora:'',salon:{numero:'',piso:''}},
            ser:{dia:'',hora:'',salon:{numero:'',piso:''}},
            nivel:'',
            barrio:'',
            transporte:''
        }
        //otros campers
    ],
    niveles:[
        {
            prerequisito:'',
            tecnologia:{nombre:'',presencial:'',sandbox:'',electiva:'',obligatoria:''}
        }
        //otros niveles
    ],
    tecnologias:[
        {
            modalidad:'electiva',
        },
        {
            modalidad:'obligatoria',
        }
        /* //otras tecnologias */
    ],
    teams:[
        {nombre:'',dia:'',hora:'',salon:{numero:'',piso:''}}
    ],
    roadMap:[
        {
            numeroCreditos:'',
            año:'',
            numeroAsignatura:''
        }
        //otros roadmaps
    ]
}

/* 2. Consultas: Usando Destructuring,
2.1 De los trainers, reportar si la asignatura (tecnología) es
remota o presencial y de los campers el nombre de salón.
2.2 El teléfono de la sede de Medellín y la dirección de la
sede de Bucaramanga
2.3 De la asignatura (tecnología) si tiene sandbox o no */

//se obtiene los datos de trainers y campers del objeto campus
const { trainers, campers } = campus;


//se mapea nombre y tecnologia
const trainerInfo = trainers.map(({ nombre, tecnologias }) => {
    return {
      nombre,
      modalidad: tecnologias.map(({ tecnologia, modalidad }) => ({
        tecnologia,
        modalidad,
      })),
    };
  });
  
  const camperInfo = campers.map(({ nombre, salones }) => {
    return {
      nombre,
      salon: salones.map(({ nombre }) => nombre),
    };
  });
  
//resultado:
[
    {
      nombre: "Nombre del trainer",
      modalidad: [
        { tecnologia: "Nombre de la tecnología", modalidad: "Remota o presencial" },
        { tecnologia: "Nombre de otra tecnología", modalidad: "Remota o presencial" },
        // ...
      ],
    },
    // ...
  ]

  [
    {
      nombre: "Nombre del camper",
      salon: [
        "Nombre del salón 1",
        "Nombre del salón 2",
        // ...
      ],
    },
    // ...
  ]

/*   2.2 El teléfono de la sede de Medellín y la dirección de la sede de Bucaramanga. */
const { sede: { medellin: { telefono }, bucaramanga: { direccion } } } = campus;